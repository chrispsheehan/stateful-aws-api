# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html

version: '3.8'
services:
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    env_file: .env.local
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
  
  setup:
    depends_on:
      - dynamodb-local
    image: amazon/aws-cli
    container_name: setup
    env_file: .env.local
    entrypoint: /bin/bash
    command:
      - -c
      - |
        set -e
        until aws dynamodb describe-limits --endpoint-url http://dynamodb-local:8000 &> /dev/null; do
          echo "DynamoDB is not yet available - waiting..."
          sleep 2
        done
        echo "DynamoDB is up and running - creating table..."
        aws dynamodb create-table --endpoint-url http://dynamodb-local:8000 --region $DYNAMODB_REGION --table-name $DYNAMODB_TABLE --billing-mode PAY_PER_REQUEST --key-schema AttributeName=id,KeyType=HASH --attribute-definitions AttributeName=id,AttributeType=S AttributeName=title,AttributeType=S --global-secondary-indexes "IndexName=IpIndex,KeySchema=[{AttributeName=title,KeyType=HASH}],Projection={ProjectionType=ALL}"
  
  check:
    depends_on:
      - setup
    image: amazon/aws-cli
    container_name: check
    env_file: .env.local
    entrypoint: /bin/bash
    command:
      - -c
      - |
        set -e
        until aws dynamodb wait table-exists --endpoint-url http://dynamodb-local:8000 --table-name $DYNAMODB_TABLE &> /dev/null; do
          echo "Waiting for table to exist..."
          sleep 2
        done
        echo "Table exists."
      
  app:
    depends_on:
      - check
    build: .
    env_file: .env.local
    container_name: app
    ports:
      - "9000:9000"
