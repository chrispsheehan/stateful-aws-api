# https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.DownloadingAndRunning.html

version: '3.8'
services:
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    ports:
      - "8000:8000"
    volumes:
      - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    healthcheck:
      test:
        - "CMD-SHELL"
        - 'curl -s -o /dev/null -I -w "%{http_code}" http://localhost:8000 | grep -q 400 || exit 1'
      interval: 1s
      timeout: 2s
      retries: 10

  setup:
    depends_on:
      dynamodb-local:
        condition: service_healthy
    image: amazon/aws-cli
    container_name: setup
    env_file: 
      - .env.local
    command:
      dynamodb create-table --endpoint-url http://dynamodb-local:8000 --region $DYNAMODB_REGION --table-name $DYNAMODB_TABLE --billing-mode PAY_PER_REQUEST --key-schema AttributeName=id,KeyType=HASH --attribute-definitions AttributeName=id,AttributeType=S AttributeName=title,AttributeType=S --global-secondary-indexes "IndexName=IpIndex,KeySchema=[{AttributeName=title,KeyType=HASH}],Projection={ProjectionType=ALL}"

  app:
    depends_on:
      - setup
    build: .
    env_file: 
      - .env.local
    container_name: app
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --spider --tries=1 http://localhost:9000/hello || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 3

  test:
    depends_on:
      app:
        condition: service_healthy
    image: node:slim
    environment: 
      - BASE_URL=http://app:9000
    container_name: test
    volumes:
      - ./:/app
    working_dir: /app
    command: ["npm", "test"]

  app-dev:
    depends_on:
      - setup
    image: node:alpine
    env_file: 
      - .env.local
    container_name: app-dev
    ports:
      - "9000:9000"
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --spider --tries=1 http://localhost:9000/hello || exit 1"]
      interval: 10s
      timeout: 2s
      retries: 3
    volumes:
      - ./:/app
    working_dir: /app
    command: ["npx", "nodemon", "./src/app.local.ts"]

  test-dev:
    depends_on:
      app-dev:
        condition: service_healthy
    image: node:slim
    environment: 
      - BASE_URL=http://app-dev:9000
    container_name: test-dev
    volumes:
      - ./:/app
    working_dir: /app
    command: ["npx", "nodemon", "--watch", ".", "--ext", ".ts", "--exec", "npm", "test"]

